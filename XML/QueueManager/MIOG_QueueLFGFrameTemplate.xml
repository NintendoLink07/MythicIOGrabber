<Ui xmlns="http://www.blizzard.com/wow/ui/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.blizzard.com/wow/ui/
..\..\FrameXML\UI.xsd">
    <Button name="MIOG_QueueLFGFrameTemplate" inherits="MIOG_QueueFrameTemplate" mixin="QueueFrameMixin" virtual="true">
        <Size y="45" />

        <Scripts>
            <OnEnter>
                local queueID = self.queueID
                local categoryID = self.categoryID

                local name, typeID, subtypeID, minLevel, maxLevel, recLevel, minRecLevel, maxRecLevel, expansionLevel, groupID, fileID, difficulty, maxPlayers, description, isHoliday, bonusRep, minPlayersDisband, isTimewalker, name2, minGearLevel, isScalingDungeon, mapID = GetLFGDungeonInfo(queueID)
                local inParty, joined, isQueued, noPartialClear, achievements, lfgComment, slotCount, categoryID2, leader, tank, healer, dps, x1, x2, x3, x4 = GetLFGInfoServer(categoryID, queueID)
                local hasData, leaderNeeds, tankNeeds, healerNeeds, dpsNeeds, totalTanks, totalHealers, totalDPS, instanceType, instanceSubType, instanceName, averageWait, tankWait, healerWait, damageWait, myWait, queuedTime = GetLFGQueueStats(categoryID, queueID)
                local activityName = activityName == self.isMultiDungeon and MULTIPLE_DUNGEONS or name

				GameTooltip:SetOwner(self, "ANCHOR_RIGHT")
				GameTooltip:SetText(isMultiDungeon and MULTIPLE_DUNGEONS or activityName, 1, 1, 1, true)

				if(hasData) then
					if(altName and name ~= altName) then
						GameTooltip:AddLine(altName)
						
					end

					GameTooltip:AddLine(string.format(DUNGEON_DIFFICULTY_BANNER_TOOLTIP, GetDifficultyInfo(difficulty)))

					if(IsPlayerAtEffectiveMaxLevel() and minLevel == UnitLevel("player")) then
						GameTooltip:AddLine("Max level dungeon")
						
					else
						GameTooltip:AddLine(isScaling and "Scales with level (" .. string.format("%d - %d", minLevel, maxLevel) .. ")" or "Doesn't scale with level")

					end

					GameTooltip:AddLine(string.format("%d - %d players", minPlayersDisband and minPlayersDisband > 0 and minPlayersDisband or 1, maxPlayers))

					GameTooltip_AddBlankLineToTooltip(GameTooltip)

					if(noPartialClear) then
						GameTooltip:AddLine("This will be a fresh ID.")

					else
						GameTooltip:AddLine("This group could have already killed some bosses.")

					end

					if(isTimewalker) then
						GameTooltip:AddLine(PLAYER_DIFFICULTY_TIMEWALKER)
					end

					if(isHoliday) then
						GameTooltip:AddLine(CALENDAR_FILTER_HOLIDAYS)
					end

					if(bonusRep > 0) then
						GameTooltip:AddLine(string.format(LFG_BONUS_REPUTATION, bonusRep))
						
					end

					GameTooltip:AddLine(string.format(LFG_LIST_TOOLTIP_MEMBERS, totalTanks + totalHealers + totalDPS - tankNeeds - healerNeeds - dpsNeeds, totalTanks - tankNeeds, totalHealers - healerNeeds, totalDPS - dpsNeeds))

					if (queuedTime > 0) then
						GameTooltip:AddLine(string.format("Queued for: |cffffffff%s|r", self.formatter:Format(GetTime() - queuedTime)))
					end

                    local myWaitOk = myWait > 0
                    local averageWaitOk = averageWait > 0
                    local tankWaitOk = tankWait > 0
                    local healerWaitOk = healerWait > 0
                    local damageWaitOk = damageWait > 0
					
                    if(myWaitOk or averageWaitOk or tankWaitOk or healerWaitOk or damageWaitOk) then
					    GameTooltip_AddBlankLineToTooltip(GameTooltip)
					    GameTooltip:AddLine("Wait times:")

                        if (myWaitOk) then
                            GameTooltip:AddLine(string.format("~ |cffffffff%s|r", self.formatter:Format(myWait)))
                        end

                        if (averageWaitOk) then
                            GameTooltip:AddLine(string.format("Ã˜ |cffffffff%s|r", self.formatter:Format(averageWait)))
                        end

                        if (tankWaitOk) then
                            GameTooltip:AddLine(string.format("|A:GO-icon-role-Header-Tank:14:14|a |cffffffff%s|r", self.formatter:Format(tankWait)))
                        end

                        if (healerWaitOk) then
                            GameTooltip:AddLine(string.format("|A:GO-icon-role-Header-Healer:14:14|a |cffffffff%s|r", self.formatter:Format(healerWait)))
                        end

                        if (damageWaitOk) then
                            GameTooltip:AddLine(string.format("|A:GO-icon-role-Header-DPS:14:14|a |cffffffff%s|r", self.formatter:Format(damageWait)))
                        end

                    end
					
					if(self.isMultiDungeon) then
						GameTooltip_AddBlankLineToTooltip(GameTooltip)
						GameTooltip:AddLine(QUEUED_FOR_SHORT)

                        local dungeonList = self:RetrieveQueueList()

						table.sort(dungeonList, function(k1, k2)
							if(k1.difficulty == k2.difficulty) then
								return k2.dungeonID > k1.dungeonID
							end

							return k2.difficulty > k1.difficulty
						end)

						for _, v in ipairs(dungeonList) do
							GameTooltip:AddLine(v.difficulty .. " " .. v.name)

						end
					end

				else
					GameTooltip:AddLine(WrapTextInColorCode("Still waiting for data from Blizzard...", "FFFF0000"))
				
				end

				GameTooltip:Show()
            </OnEnter>
            <OnLoad method="OnLoad" />
        </Scripts>
    </Button>
</Ui>